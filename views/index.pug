extends layout2

block content
  h1= title
  p Welcome to #{title}
  a(href='login') 登入
  div(id="controls")
    input(type="radio" name="mode" value="select" checked="checked" id="mode-select" onclick="ggraph.set_mode('select')")
    label(for="mode-select") Select
    bar
    | Nodes: 
    span(id="node-count") 0
    | Edges: 
    span(id="edge-count") 0
  div(id="container")

block content2 
  script.
    var all;
    var selected;
    var graph;
    var converted;
    var type = null;

    ggraph.init('container', 25);

    var merge = function() {
      ggraph.merge(selection.all());
    }

    var remove = function() {
      var s = [];
      for (var k in selected) {
        s.push({id: k})
      }
      ggraph.remove(s);
    }

    var split = function() {
      ggraph.split(all);
    }

    function _singles(e) {
      var groups = singles.get_groups(converted);
      all = groups;
      ggraph.merge(groups);
    };

    function _backbones(e) {
      var res = simmelian.filter(converted.all_links, 0.75);
      ggraph.filter_links(res);
    };

    function _set_comment() {
      if (selection.all().length === 0) return;
      var comment = document.getElementById('comment').value;
      var mock = ggraph.convert({
        nodes: [{id: comment, type: 'comment'}],
        links: []
      });

      var original = ggraph.get_graph();
      var comment_obj = mock.nodes[0];

      original.nodes.push(comment_obj);

      for (var key in mock.member_map) {
        original.member_map[key] = mock.member_map[key];
      }

      for (var key in mock.group_map) {
        original.group_map[key] = original.nodes.length - 1;
      }

      document.getElementById('comment').value = '';

      original.all_links[comment] = {}

      var tx = 0;
      var ty = 0;

      selection.all().map(function(selected) {
        var group_id = original.member_map[selected.id].group;
        var target = original.nodes[original.group_map[group_id]];
        tx += target.x;
        ty += target.y;

        original.all_links[comment][selected.id] = 1;
        original.links.push({
          source: comment_obj,
          target: target,
          value: 1
        })
      });

      comment_obj.x = tx / selection.all().length;
      comment_obj.y = ty / selection.all().length;

      ggraph.draw(original);

      selection.clear();
    }

    ggraph.on_select(function(_all, _selected) {
      all = selection.all();
      selected = selection.selected();
    });

    var graph = !{JSON.stringify(graphv)}

    document.getElementById('node-count').innerHTML = graph.nodes.length;
    document.getElementById('edge-count').innerHTML = graph.links.length;

    converted = ggraph.convert(graph);

    ggraph.draw(converted);